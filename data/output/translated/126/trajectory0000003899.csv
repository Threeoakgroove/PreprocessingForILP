	rawClass	segment_id	previousSegmentIDs	hasNotTransportMode	hasTransportMode	hasVelocity	hasAcceleration	hasChangepoint	isFasterThanAllPrevious	hasKnownTransportMode	previousHasVelocity	previousHasAcceleration	previousHasChangepoint	previousSegmentRelation	hasStopPoint	previousHasStopPoint
0	['walk', 'bus']	segment(seg126_3898_0).	['segment(seg126_3898_1).', 'segment(seg126_3898_2).', 'segment(seg126_3898_3).', 'segment(seg126_3898_4).', 'segment(seg126_3898_5).']	['hasTransportMode(seg126_3898_0,bike).', 'hasTransportMode(seg126_3898_0,car).']	['hasTransportMode(seg126_3898_0,walk).', 'hasTransportMode(seg126_3898_0,bus).']	hasVelocity(seg126_3898_0,very_fast).	hasAcceleration(seg126_3898_0,much_faster).	hasChangepoint(seg126_3898_0).	empty	['hasKnownTransportMode(seg126_3898_1,walk).', 'hasKnownTransportMode(seg126_3898_2,walk).', 'hasKnownTransportMode(seg126_3898_2,bus).', 'hasKnownTransportMode(seg126_3898_3,walk).', 'hasKnownTransportMode(seg126_3898_4,walk).', 'hasKnownTransportMode(seg126_3898_5,walk).']	['hasVelocity(seg126_3898_1,below_medium).', 'hasVelocity(seg126_3898_2,very_fast).', 'hasVelocity(seg126_3898_3,below_medium).', 'hasVelocity(seg126_3898_4,below_medium).', 'hasVelocity(seg126_3898_5,slow).']	['hasAcceleration(seg126_3898_1,unchanged).', 'hasAcceleration(seg126_3898_2,much_faster).', 'hasAcceleration(seg126_3898_3,unchanged).', 'hasAcceleration(seg126_3898_4,slightly_faster).', 'hasAcceleration(seg126_3898_5,slightly_faster).']	['empty', 'hasChangepoint(seg126_3898_2).', 'empty', 'empty', 'empty']	['previousSegmentRelation(seg126_3898_0,seg126_3898_1).', 'previousSegmentRelation(seg126_3898_1,seg126_3898_2).', 'previousSegmentRelation(seg126_3898_2,seg126_3898_3).', 'previousSegmentRelation(seg126_3898_3,seg126_3898_4).', 'previousSegmentRelation(seg126_3898_4,seg126_3898_5).']	hasStopPoint(seg126_3898_0,none).	['hasStopPoint(seg126_3898_1,none).', 'hasStopPoint(seg126_3898_2,none).', 'hasStopPoint(seg126_3898_3,none).', 'hasStopPoint(seg126_3898_4,none).', 'hasStopPoint(seg126_3898_5,none).']
